reduce1():
    if top == "STAT nabla":
        допустить
    else:
        отвергнуть

reduce2():
    if top == "STATS STAT":
        rule2()
    elif top == "STAT":
        rule1()
    else:
        отвергнуть

reduce3():
    if top == "var = EXPRESSION":
        rule5()
    elif top == "LOG_EXP log_operator EXPRESSION":
        rule7()
    else:
        отвергнуть
    
reduce4():
    if top == "LOG_EXP":
        rule6()
    else:
        отвергнуть

reduce5():
    if top == "ADDITIVE_EXP":
        rule8()
    elif top == "ADDITIVE_EXP comp_operator ADDITIVE_EXP":
        rule9()
    else:
        отвергнуть

reduce6():
    if top == "MULT_EXP":
        rule10()
    elif top == "ADDITIVE_EXP pm_operator MULT_EXP":
        rule11()
    else:
        отвергнуть

reduce7():
    if top == "CAST_EXP":
        rule12()
    elif top == "MULT_EXP md_operator CAST_EXP"
        rule13()
    elif top == "UNARY_EXP"
        rule14()
    elif top == "unary_operator CAST_EXP"
        rule19()
    else:
        отвергнуть

reduce8():
    if top == "UNARY_EXP":
        rule14()
    elif top == "prefix_operator UNARY_EXP":
        rule18()
    else:
        отвергнуть

reduce9():
    if top == "ASSIGNMENT_EXP ;":
        rule3()
    else:
        отвергнуть

reduce10():
    if top == "{ STATS }":
        rule4()
    else:
        отвергнуть

reduce11():
    if top == "var":
        rule16()
    else:
        отвергнуть

reduce12():
    if top == "const":
        rule17()
    else:
        отвергнуть